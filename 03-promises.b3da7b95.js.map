{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SA+BA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,MAEpBA,MAtCMO,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAkBC,GAChBA,EAAMC,iBAEN,IAAIC,EAAQC,OAAOH,EAAMI,cAAcd,MAAMe,OACzCC,EAAOH,OAAOH,EAAMI,cAAcE,KAAKD,OACvCE,EAASJ,OAAOH,EAAMI,cAAcG,OAAOF,OAE/C,IAAK,IAAIG,EAAW,EAAGA,GAAYD,EAAQC,GAAY,EACrDpB,EAAcoB,EAAUN,GACrBO,MAAK,EAACpB,SAAEA,EAAQC,MAAEA,MACjBJ,EAAAwB,OAAOC,QACL,uBAAqBtB,QAAiBC,OAExCsB,QAAQC,IAAI,uBAAqBxB,QAAiBC,UAEnDwB,OAAM,EAACzB,SAAEA,EAAQC,MAAEA,MACpBJ,EAAAwB,OAAOK,QACH,sBAAoB1B,QAAiBC,OAEvCsB,QAAQC,IAAI,sBAAoBxB,QAAeC,UAEnDY,GAASI","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(event) {\n  event.preventDefault();\n\n  let delay = Number(event.currentTarget.delay.value);\n  let step = Number(event.currentTarget.step.value);\n  let amount = Number(event.currentTarget.amount.value);\n\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n      Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n      );\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","event","preventDefault","delay1","Number","currentTarget","value","step","amount","position1","then","Notify","success","console","log","catch","failure"],"version":3,"file":"03-promises.b3da7b95.js.map"}